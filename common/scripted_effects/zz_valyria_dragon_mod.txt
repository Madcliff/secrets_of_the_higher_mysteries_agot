zz_agot_bond_dragon_relation_effect = {
	agot_set_as_owned_dragon = { # Set as owned if not
		OWNER = $ACTOR$
		DRAGON = $DRAGON$
	}
	$ACTOR$ = { # Set relation
		if = {
			limit = {
				is_alive = yes # Needed for history files
				NOT = { has_relation_agot_dragon = $DRAGON$ }
			}
			set_relation_agot_dragon = { reason = test_friend_desc target = $DRAGON$ }
			create_character_memory = {
				type = agot_bonded_a_dragon
				participants = { tamed_dragon = $DRAGON$ }
			}
		}

		#Fucking Vaegon
		if = {
			limit = {
				has_nickname = nick_the_dragonless
			}
			remove_nickname = yes
		}
	}
}

zz_agot_tame_dragon = {

	agot_set_as_rider = { # Set rider
		RIDER = $TAMER$
		DRAGON = $DRAGON$
	}
	if = {
		limit = {
			$TAMER$ = {
				has_relation_agot_dragon = $DRAGON$
				$DRAGON$ = {
					exists = var:cradlemate
					var:cradlemate = $TAMER$
					var:cradlemate = {
						dynasty ?= { has_dynasty_perk = dragonrider_dynasty_legacy_1 }
					}
				}
			}
		}
		$TAMER$ = {
			add_trait_xp = {
				trait = dragonrider
				track = dragon_bond
				value = 30
			}
		}
	}
	else_if = {
		limit = {
			$TAMER$ = {
				has_relation_agot_dragon = $DRAGON$
			}
		}
		$TAMER$ = {
			add_trait_xp = {
				trait = dragonrider
				track = dragon_bond
				value = 100
			}
		}
	}
	agot_bond_dragon_relation_effect = { # Set as bonded if not
		ACTOR = $TAMER$
		DRAGON = $DRAGON$
	}
}

agot_back_apply_dragon_aging_effect = { # Only apply this once on character creation, doing it later will massively inflate values
	set_variable = {
		name = dragon_age_counter
		value = 0
	}
	while = {
		count = age
		limit = {
			age > var:dragon_age_counter
		}
		# Destined dragons get 40 prowess and 40 size after first year
		if = {
			limit = {
				var:dragon_age_counter = 1
				has_trait = dragon_destined
			}
			add_prowess_skill = 40
			change_dragon_size_direct = {
				VALUE = 40
			}
			set_variable = { # To block story cycle application
				name = dragon_destined_count
				value = 99
			}
		}
		# Normal growth calculations
		if = {
			limit = {
				var:dragon_age_counter < 11
				NOT = { has_trait = dragon_destined }
			}
			add_prowess_skill = 3
			change_dragon_size_direct = {
				VALUE = 3
			}
		}
		else_if = {
			limit = {
				var:dragon_age_counter < 15
				NOT = { has_trait = dragon_destined }
			}
			add_prowess_skill = 2
			change_dragon_size_direct = {
				VALUE = 2
			}
		}
		else = {
			if = {
				limit = {
					has_character_flag = in_dragonpit
				}
				random_list = {
					20 = {}
					80 = {
						add_prowess_skill = 1
						change_dragon_size_direct = {
							VALUE = 1
						}
					}
				}
			}
			else = {
				add_prowess_skill = 1
				change_dragon_size_direct = {
					VALUE = 1
				}
			}
		}
		change_variable = {
			name = dragon_age_counter
			add = 1
		}
	}
	remove_variable = dragon_age_counter
}

agot_historical_dragon_transfer_vars_to_story_cycle_effect = {
	$DRAGON$ = {
		save_scope_as = dragon
	}
	title:c_ruins.holder = {
		set_variable = {
			name = transfered_dragon
			value = scope:dragon
		}
		create_story = {
			type = story_dragon_variable_storage
			save_scope_as = story
		}
		scope:story = {
			# Dragon Genes
			set_variable = {
				name = dragon_age
				value = $dragon_age$
			}
			set_variable = {
				name = gene_dragon_primary_color_value
				value = $gene_dragon_primary_color_value$
			}
			set_variable = {
				name = gene_dragon_secondary_hue
				value = $gene_dragon_secondary_hue$
			}
			set_variable = {
				name = gene_dragon_secondary_value
				value = $gene_dragon_secondary_value$
			}
			set_variable = {
				name = gene_dragon_tertiary_hue
				value = $gene_dragon_tertiary_hue$
			}
			set_variable = {
				name = gene_dragon_tertiary_value
				value = $gene_dragon_tertiary_value$
			}
			set_variable = {
				name = gene_dragon_eye_color_hue
				value = $gene_dragon_eye_color_hue$
			}
			set_variable = {
				name = gene_dragon_eye_color_value
				value = $gene_dragon_eye_color_value$
			}
			set_variable = {
				name = gene_dragon_horn_color_hue
				value = $gene_dragon_horn_color_hue$
			}
			set_variable = {
				name = gene_dragon_horn_color_value
				value = $gene_dragon_horn_color_value$
			}
			set_variable = {
				name = gene_dragon_brow_width
				value = $gene_dragon_brow_width$
			}
			set_variable = {
				name = gene_dragon_cheek_width
				value = $gene_dragon_cheek_width$
			}
			set_variable = {
				name = gene_dragon_chin_profile
				value = $gene_dragon_chin_profile$
			}
			set_variable = {
				name = gene_dragon_crest_depth
				value = $gene_dragon_crest_depth$
			}
			set_variable = {
				name = gene_dragon_head_roundness
				value = $gene_dragon_head_roundness$
			}
			set_variable = {
				name = gene_dragon_horns_eyebrow_length
				value = $gene_dragon_horns_eyebrow_length$
			}
			set_variable = {
				name = gene_dragon_main_horn_shape_template
				value = $gene_dragon_main_horn_shape_template$
			}
			set_variable = {
				name = gene_dragon_main_horn_shape_value
				value = $gene_dragon_main_horn_shape_value$
			}
			set_variable = {
				name = gene_dragon_body_shading_template
				value = $gene_dragon_body_shading_template$
			}
			set_variable = {
				name = gene_dragon_body_shading_value
				value = $gene_dragon_body_shading_value$
			}
			set_variable = {
				name = gene_dragon_wings_shading_template
				value = $gene_dragon_wings_shading_template$
			}
			set_variable = {
				name = gene_dragon_wings_shading_value
				value = $gene_dragon_wings_shading_value$
			}
			set_variable = {
				name = gene_dragon_jaw_width
				value = $gene_dragon_jaw_width$
			}
			set_variable = {
				name = gene_dragon_lower_jaw_height
				value = $gene_dragon_lower_jaw_height$
			}
			set_variable = {
				name = gene_dragon_lower_jaw_width
				value = $gene_dragon_lower_jaw_width$
			}
			set_variable = {
				name = gene_dragon_old_neck
				value = $gene_dragon_old_neck$
			}
			set_variable = {
				name = gene_dragon_outer_brow_height
				value = $gene_dragon_outer_brow_height$
			}
			set_variable = {
				name = gene_dragon_snout_height
				value = $gene_dragon_snout_height$
			}
			set_variable = {
				name = gene_dragon_snout_length
				value = $gene_dragon_snout_length$
			}
			set_variable = {
				name = gene_dragon_snout_profile
				value = $gene_dragon_snout_profile$
			}
			set_variable = {
				name = gene_dragon_snout_width
				value = $gene_dragon_snout_width$
			}
			set_variable = {
				name = gene_dragon_upper_jaw_width
				value = $gene_dragon_upper_jaw_width$
			}
			set_variable = {
				name = gene_dragon_center_fin_size
				value = $gene_dragon_center_fin_size$
			}
			set_variable = {
				name = gene_dragon_back_spike_size
				value = $gene_dragon_back_spike_size$
			}
			set_variable = {
				name = gene_dragon_horns_eyebrow
				value = $gene_dragon_horns_eyebrow$
			}
			set_variable = {
				name = gene_dragon_neck_spike_size
				value = $gene_dragon_neck_spike_size$
			}
			set_variable = {
				name = gene_dragon_side_fin_size
				value = $gene_dragon_side_fin_size$
			}
			set_variable = {
				name = gene_dragon_snout_end_width
				value = $gene_dragon_snout_end_width$
			}
			set_variable = {
				name = gene_dragon_neck_length
				value = $gene_dragon_neck_length$
			}
			set_variable = {
				name = gene_dragon_metallic_scales_strength
				value = $gene_dragon_metallic_scales_strength$
			}
			set_variable = {
				name = gene_dragon_wounded
				value = $gene_dragon_wounded$
			}
			set_variable = {
				name = gene_dragon_tail_length
				value = $gene_dragon_tail_length$
			}
			set_variable = {
				name = gene_dragon_primary_color_hue
				value = $gene_dragon_primary_color_hue$
			}
			set_variable = {
				name = dragon_size_base
				value = 0
			}
			# Generate the dragons historical size Effect
			set_local_variable = { name = count value = 0 }
			while = {
				count = var:dragon_age
				limit = {
					var:dragon_age > local_var:count
				}
				if = {
					limit = {
						local_var:count < 11
					}
					scope:dragon = { add_prowess_skill = 3 }
					change_dragon_size_direct = {
						VALUE = 3
					}
				}
				else_if = {
					limit = {
						local_var:count < 15
					}
					scope:dragon = { add_prowess_skill = 2 }
					change_dragon_size_direct = {
						VALUE = 2
					}
				}
				else = {
					if = {
						limit = {
							scope:dragon = { has_character_flag = in_dragonpit }
						}
						random_list = {
							20 = {}
							80 = {
								scope:dragon = { add_prowess_skill = 1 }
								change_dragon_size_direct = {
									VALUE = 1
								}
							}
						}
					}
					else = {
						scope:dragon = { add_prowess_skill = 1 }
						change_dragon_size_direct = {
							VALUE = 1
						}
					}
				}
				change_local_variable = {
					name = count
					add = 1
				}
			}
			set_variable = {
				name = dragon_size
				value = scope:dragon.dragon_size
			}
		}

	}
}

agot_growing_dragon_cannibal_trait_chance = {
	# Chance of cannibal dragon if at least 14 dragons
	save_scope_as = growing_dragon
	if = {
		limit = {
			scope:growing_dragon = {
				NOR = { 
					has_trait = dragon_cannibal 
					has_trait = dragon_restrained 
					has_trait = dragon_friendly 
				}
				OR = {
					has_trait = dragon_aggressive
					has_trait = dragon_voracious
					has_trait = dragon_bloodthirsty
				}
				NOR = {
					has_trait = immortal 
					has_trait = zz_draconic_longevity
					liege_or_court_owner ?= { 
						has_trait = zz_magister
					}
				}
			}
			any_living_dragon = {
				count >= lower_cannibal_dragon_value
			}
			trigger_if = {
				limit = {
					any_living_dragon = {
						count < upper_cannibal_dragon_value
					}
				}
				any_living_dragon = {
					count < 1
					has_trait = dragon_cannibal
				}
			}
			trigger_else = {
				any_living_dragon = {
					count < global_dragon_cannibal_limit
					has_trait = dragon_cannibal
				}
			}
			any_living_dragon = { # And there is a valid target
				NOT = { this = scope:growing_dragon } # Not the would-be cannibal
				has_character_flag = owned_dragon # Is owned or tamed
				location = scope:growing_dragon.location # In the same location
				NOT = { has_trait = dragon_cannibal } # No cascading cannibalism
				dragon_combat_effectiveness <= scope:growing_dragon.dragon_combat_effectiveness # Not stronger than the dragon
			}
		}
		random_list = {
			80 = {
				modifier = {
					add = -30
					has_trait = dragon_voracious
				}
				modifier = {
					add = -20
					has_trait = dragon_bloodthirsty
				}
				modifier = {
					add = -10
					has_trait = dragon_aggressive
				}
			}
			20 = {
				modifier = {
					add = -15
					has_trait = dragon_supporting
				}
				modifier = {
					add = -15
					has_trait = dragon_calculating
				}
				modifier = {
					factor = 0.3
					any_living_dragon = {
						has_trait = dragon_cannibal
					}
				}
				random_living_dragon = {
					limit = {
						has_character_flag = owned_dragon # Is owned or tamed
						location = scope:growing_dragon.location # In the same location
						NOT = { has_trait = dragon_cannibal } # No cascading cannibalism
						dragon_combat_effectiveness <= scope:growing_dragon.dragon_combat_effectiveness # Not stronger than the dragon
					}
					save_scope_as = growing_dragon_victim
				}
				court_owner = {
					trigger_event = {
						id = agot_dragon_personality.0015
						days = { 20 300 }
					}
				}
			}
		}
	}
}

agot_apply_dragon_aging_effect = {
	$DRAGON$ = {
		save_scope_as = dragon
		if = {
			limit = {
				age < 11
				NOT = { has_trait = dragon_destined } # destined get their initial maturing via story cycle in the 1st year
			}
			add_prowess_skill = 3
			change_dragon_size = {
				VALUE = 3
			}
		}
		else_if = {
			limit = {
				age < 15
				NOT = { has_trait = dragon_destined }
			}
			add_prowess_skill = 2
			change_dragon_size = {
				VALUE = 2
			}
		}
		else = { # Maturing done
			if = {
				limit = { has_character_flag = in_dragonpit }
				#Natural Pit check
				if = {
					limit = {
						var:pitted_dragon_location ?= title:c_dragonstone
					}
					# Growth is not as impinged compared to manmade pits, volcano magic
					random_list = {
						5 = {}
						55 = {
							add_prowess_skill = 1
							change_dragon_size = {
								VALUE = 1
							}
						}
						15 = {
							add_prowess_skill = 2
							change_dragon_size = {
								VALUE = 2
							}
						}
					}
				}
				else_if = {
					limit = { 
						var:pitted_dragon_location ?= {
							zz_has_valyria_natural_dragon_pit_county = yes 
						}
					}
					# Growth is not as impinged compared to manmade pits, volcano magic
					random_list = {
						80 = {
							add_prowess_skill = 2
							change_dragon_size = {
								VALUE = 2
							}
						}
						20 = {
							add_prowess_skill = 3
							change_dragon_size = {
								VALUE = 3
							}
						}
					}
				}
				else = {
					random_list = {
						30 = {} # Older dragons in a dragonpit do not grow as well
						60 = {
							add_prowess_skill = 1
							change_dragon_size = {
								VALUE = 1
							}
						}
						10 = {
							add_prowess_skill = 2
							change_dragon_size = {
								VALUE = 2
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					liege_or_court_owner ?= { 
							has_trait = zz_magister
						}
					}
				random_list = {
					80 = {
						add_prowess_skill = 2
						change_dragon_size = {
							VALUE = 2							
						}
					}
					20 = {
						add_prowess_skill = 5
						change_dragon_size = {
							VALUE = 5
						}
					}
				}
			}
			else = {
				random_list = {
					10 = {}
					70 = {
						add_prowess_skill = 1
						change_dragon_size = {
							VALUE = 1
						}
					}
					20 = {
						add_prowess_skill = 2
						change_dragon_size = {
							VALUE = 2
						}
					}
				}
			}
		}
	}
}

agot_create_generic_dragonpit_scripted_effect = {
	$DRAGON_PIT_OWNER$ = {
		trigger_event = agot_dragonkeepers.0001  # Creates the Head Dragonkeeper Character, Provides a Little Bit of Context to Player
		#  Adds a variable to the county holding the dragonpit so that the decision cannot be taken again
		if = {
			limit = {
				any_held_county = {
					any_county_province = {
						zz_has_dragon_pit_building = yes
					}
					NOT = { has_variable = has_dragonkeeper_order }
				}
			}
			random_held_county = {
				limit = {
					any_county_province = {
						has_holding_type = castle_holding
						has_building_or_higher = generic_dragon_pit_01
					}
					NOT = { has_variable = has_dragonkeeper_order }
				}
				set_variable = { name = has_dragonkeeper_order }
			}
			add_realm_law = dragonpit_close_family_law
		}
		if = {
			limit = {
				has_ep1_dlc_trigger = yes
			}
			hidden_effect = { set_amenity_level = { type = agot_dragonpit_amenities value = 3 } }
			custom_tooltip = agot_dragonpit_amenities_level_set_to_three_tt
		}
	}
}

agot_change_dragonpit_status = {
	scope:owner = {
		random_held_county = {
			limit = {
				OR = {
					any_county_province = {
						has_holding_type = castle_holding
						has_building_or_higher = generic_dragon_pit_01
					}
					any_county_province = {
						zz_has_dragon_pit_building = yes
					}
				}
				has_variable = has_dragonkeeper_order
			}
			save_scope_as = dragon_pit_location
		}
	}
	if = {
		limit = {
			has_character_flag = in_dragonpit
		}
		agot_remove_from_dragonpit = { DRAGON = root DRAGONPIT_HOLDER = scope:owner DRAGONPIT_COUNTY = scope:dragon_pit_location }
	}
	else_if = {
		limit = {
			has_character_flag = owned_dragon
		}
		agot_send_to_dragonpit = { DRAGON = root DRAGONPIT_HOLDER = scope:owner DRAGONPIT_COUNTY = scope:dragon_pit_location }
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = owned_dragon
			}
		}
		agot_force_wild_dragon_into_dragonpit_effect = { DRAGON = root DRAGONPIT_HOLDER = scope:owner DRAGONPIT_COUNTY = scope:dragon_pit_location }
	}
}

agot_remove_from_dragonpit_skip_county_effects = {
	$DRAGON$ = {
		remove_character_flag = in_dragonpit
		remove_character_modifier = agot_dragon_in_dragonpit
		var:pitted_dragon_location = {
			remove_list_variable = {
				name = dragons_in_pit
				target = $DRAGON$
			}
		}
		remove_variable = pitted_dragon_location
	}
}

agot_change_dragonpit_status_ai = {
	$OWNER$ = {
		random_held_county = {
			limit = {
				OR = {
					any_county_province = {
						has_holding_type = castle_holding
						has_building_or_higher = generic_dragon_pit_01
					}
					any_county_province = {
						zz_has_dragon_pit_building = yes
					}
				}
				has_variable = has_dragonkeeper_order
			}
			save_scope_as = dragon_pit_location
		}
	}
	$DRAGON_REC$ = {
		if = {
			limit = {
				has_character_flag = in_dragonpit
			}
			agot_remove_from_dragonpit = { DRAGON = $DRAGON_REC$ DRAGONPIT_HOLDER = $OWNER$ DRAGONPIT_COUNTY = scope:dragon_pit_location }
		}
		else_if = {
			limit = {
				has_character_flag = owned_dragon
			}
			agot_send_to_dragonpit = { DRAGON = $DRAGON_REC$ DRAGONPIT_HOLDER = $OWNER$ DRAGONPIT_COUNTY = scope:dragon_pit_location }
		}
		else_if = {
			limit = {
				NOT = {
					has_character_flag = owned_dragon
				}
			}
			agot_force_wild_dragon_into_dragonpit_effect = { DRAGON = $DRAGON_REC$ DRAGONPIT_HOLDER = $OWNER$ DRAGONPIT_COUNTY = scope:dragon_pit_location }
		}
	}
}